<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Live for dead</title>
  
  <subtitle>YJ my love</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://livefordead.github.io/"/>
  <updated>2019-12-15T19:59:01.463Z</updated>
  <id>http://livefordead.github.io/</id>
  
  <author>
    <name>livefordead</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Some Complaing</title>
    <link href="http://livefordead.github.io/2019/12/16/Some-Complaing/"/>
    <id>http://livefordead.github.io/2019/12/16/Some-Complaing/</id>
    <published>2019-12-15T19:44:57.000Z</published>
    <updated>2019-12-15T19:59:01.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抱怨亿句"><a href="#抱怨亿句" class="headerlink" title="抱怨亿句"></a>抱怨亿句</h1><p>啊啊啊，我搞了几个小时，终于会自己上传文章了，之前要搞那个尺取法，这会儿舒服了我去</p><h2 id="我遇到了的困难"><a href="#我遇到了的困难" class="headerlink" title="我遇到了的困难"></a><b style="color:red">我遇到了的困难</b></h2><h3 id="1-Tags"><a href="#1-Tags" class="headerlink" title="1. Tags"></a>1. Tags</h3><p>首先是GIT找不到上传文件，后来把tags删掉就完事了（其实是tags的文件里面没有相对应的，所以就上传不了）</p><h3 id="2-操作符"><a href="#2-操作符" class="headerlink" title="2. 操作符"></a>2. 操作符</h3><p>其次是一些操作符不清楚，但是现在还是熟练多了（服了）</p><h3 id="3-图片"><a href="#3-图片" class="headerlink" title="3. 图片"></a>3. 图片</h3><p>再者就是图片插入，用HTML的方法img但是加载不出来，很蛋疼</p><h2 id="近期的学习"><a href="#近期的学习" class="headerlink" title="近期的学习"></a><b style="color:blue">近期的学习</b></h2><h3 id="1-考试"><a href="#1-考试" class="headerlink" title="1. 考试"></a>1. 考试</h3><p>离谱的就是快要信导考试了，历史也要考试，新知识的学习可能会放慢，优先应付考试（手动滑稽）</p><h3 id="2-作业"><a href="#2-作业" class="headerlink" title="2. 作业"></a>2. 作业</h3><p>我***，算了，我是个儒雅随和的人，这么多无关紧要的作业，真的浪费时间，但是又不得不做，唉</p><h3 id="3-在看的书和计划看的书"><a href="#3-在看的书和计划看的书" class="headerlink" title="3. 在看的书和计划看的书"></a>3. 在看的书和计划看的书</h3><p>汇编、算法（紫书）、Java（神级乱入）（emmm都了解一点应该没大问题吧）</p><p>暂时也就这些吧，会定期整理分析自己的现状滴</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;抱怨亿句&quot;&gt;&lt;a href=&quot;#抱怨亿句&quot; class=&quot;headerlink&quot; title=&quot;抱怨亿句&quot;&gt;&lt;/a&gt;抱怨亿句&lt;/h1&gt;&lt;p&gt;啊啊啊，我搞了几个小时，终于会自己上传文章了，之前要搞那个尺取法，这会儿舒服了我去&lt;/p&gt;
&lt;h2 id=&quot;我遇到了的困难&quot;
      
    
    </summary>
    
    
    
      <category term="成长记录" scheme="http://livefordead.github.io/tags/%E6%88%90%E9%95%BF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Rule Taking</title>
    <link href="http://livefordead.github.io/2019/12/16/Rule-Taking-0/"/>
    <id>http://livefordead.github.io/2019/12/16/Rule-Taking-0/</id>
    <published>2019-12-15T18:37:04.000Z</published>
    <updated>2019-12-15T19:47:47.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="尺取法-Rule-Taking"><a href="#尺取法-Rule-Taking" class="headerlink" title="尺取法 (Rule Taking)"></a>尺取法 (Rule Taking)</h1><h2 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a><b style="color:green">常见用法</b></h2><p>一个数组中寻找长度最（小 / 大）的一段满足和最大或者大于某一个定值</p><h2 style="color:green">主要思想</h2>当 a1 , a2 , a3 ...... an 满足和 >= S，得到一个区间长度 n，那么去掉开头 a1，剩下 a2 , a3 ... 判断是否满足 >= S，<b style="color:red">如果满足</b>，那么区间长度更新，<b style="color:red">如果不满足</b>，那么尾部向后延展，判断 a2 , a3 ...... a (n + 1) 是否满足条件，重复这样的操作<h2 id="理解与思考"><a href="#理解与思考" class="headerlink" title="理解与思考"></a><b style="color:green">理解与思考</b></h2><p>当一个区间<b style="color:blue">满足条件</b>时，那么去掉区间开头第一个数，得到新区间，判断新区间是否满足条件，如果不满足条件，那么区间末尾向后扩展，直到满足条件为止，这样就得到了很多满足条件的区间，再根据题意，在此之间进行选择，比如区间最长，区间最短啥的，这样跑一遍下来，时间复杂度只有 O (n)</p><h2 id="比如"><a href="#比如" class="headerlink" title="比如"></a><b style="color:purple">比如</b></h2><p>给出 T 组数据，每组数据有 n 个数，并且每次给你一个 s 值，求最小的满足相加大于 s 的连续子序列的长度</p><p>详情请前往<a herf="http://poj.org/problem?id=3061">POJ3061</a></p><p>下面贴代码（C语言）</p><p>#include&lt;stdio.h&gt;</p><p>int a[100005]; //定义一个数组来储存每组的数</p><p>int main(void)</p><p>{<br>    int T;</p><p>​    scanf(“%d”, &amp;T);</p><p>​    while(T–)</p><p>​    {<br>​        int n, s;</p><p>​        scanf(“%d %d”, &amp;n, &amp;s);</p><p>​        for(int i = 1; i &lt;= n; i++)</p><p>​            scanf(“%d”, &amp;a[i]);  //赋值</p><p>​        int k = n + 1;</p><p>​        int u = 0;</p><p>​        int v = 0;</p><p>​        int m = 0; //清零操作</p><p>​        for(;;)</p><p>​        {</p><p>​            while(m &lt; s &amp;&amp; v &lt; n)</p><p>​                m = m + a[++v];  //从第一个数开始增加，直到和大于等于 s 或者在 v 大于等于 n 的时候还</p><p>​                                             // 是要小，就结束循环</p><p>​            if(m &lt; s)  //判断和是否大于s,其实就是看整个数段总和是否大于s，如果不就跳出循环</p><p>​                break;</p><p>​            if(k &gt; v - u)  // u 作为数段的前标，v 作为数段的后标，v - u 就是数段的长度</p><p>​                k = v - u; //取小的</p><p>​            m = m - a[u++]; //在确定 s 比现在的和小后，从前面开始缩短数段，再进行循环</p><p>​        }</p><p>​        if(k == n + 1) //这是所有数的和都比 s 小的情况</p><p>​            k = 0;</p><p>​        printf(“%d\n”, k);  //输出</p><p>​    }</p><p>​    return 0;</p><p>}</p><h1 id="有点想说的"><a href="#有点想说的" class="headerlink" title="有点想说的"></a><b style="color:orange">有点想说的</b></h1><p>emm第一个传上来的学习的……emm今晚去参加了元旦晚会的二审，没什么时间学习了，惭愧，然后就是报名了明年的蓝桥杯，需要准备（毕竟交了300嗷嗷嗷嗷），所以整理了一个算法专栏，回顾以前学的，更新新学习的，emm暂时也就这些了，我会坚持下去嗷。（话说博客真香哇）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;尺取法-Rule-Taking&quot;&gt;&lt;a href=&quot;#尺取法-Rule-Taking&quot; class=&quot;headerlink&quot; title=&quot;尺取法 (Rule Taking)&quot;&gt;&lt;/a&gt;尺取法 (Rule Taking)&lt;/h1&gt;&lt;h2 id=&quot;常见用法&quot;&gt;&lt;a 
      
    
    </summary>
    
    
    
      <category term="算法" scheme="http://livefordead.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello everyone</title>
    <link href="http://livefordead.github.io/2019/12/15/Hello-everyone/"/>
    <id>http://livefordead.github.io/2019/12/15/Hello-everyone/</id>
    <published>2019-12-15T07:47:48.000Z</published>
    <updated>2019-12-15T19:41:40.333Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h1><p>首先，要感谢<a href="https://lemonprefect.cn/" target="_blank" rel="noopener">Lemon</a>的技术支持，在创建了这个博客的时候我已经入大学三个月了，这个博客我会用来记录自己的一些学习经历，平时的刷题的一些报告（坑？），算法之类的，希望可以多向大佬们学习，最后争取超越他们。</p><h1 id="当下"><a href="#当下" class="headerlink" title="当下"></a>当下</h1><p>新生赛发挥不错，进入了网安组，承蒙老师学长厚爱，和同届大佬们的谦让，我有幸成为了19级组长，</p><p>希望与大家一同努力进步，誓必不辜负大家的信任。</p><h1 id="将来的想法"><a href="#将来的想法" class="headerlink" title="将来的想法"></a>将来的想法</h1><p>网安组是两个方向，web和pwn，说实在的我现在两个都挺感兴趣，所以还在思考，至于其它的高数英语之类的学习太尼玛蛋疼了，就尼玛离谱，还有历史什么的，很让人头大，总之，先学着就完事了。</p><p style="color:red">感谢你来到了这个小地方.</p><p><img src="/.io//D:%5Cshit%5Csource_posts%5CHello-everyone%5CkPlYAP.jpg" alt="程序员嘛，也还行"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于这个博客&quot;&gt;&lt;a href=&quot;#关于这个博客&quot; class=&quot;headerlink&quot; title=&quot;关于这个博客&quot;&gt;&lt;/a&gt;关于这个博客&lt;/h1&gt;&lt;p&gt;首先，要感谢&lt;a href=&quot;https://lemonprefect.cn/&quot; target=&quot;_blan
      
    
    </summary>
    
    
    
      <category term="成长记录" scheme="http://livefordead.github.io/tags/%E6%88%90%E9%95%BF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
