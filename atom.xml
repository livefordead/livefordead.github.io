<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Live for dead</title>
  
  <subtitle>YJ my love</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://livefordead.github.io/"/>
  <updated>2019-12-16T12:30:30.609Z</updated>
  <id>http://livefordead.github.io/</id>
  
  <author>
    <name>livefordead</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>九余</title>
    <link href="http://livefordead.github.io/2019/12/16/%E4%B9%9D%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    <id>http://livefordead.github.io/2019/12/16/%E4%B9%9D%E4%BD%99%E5%AE%9A%E7%90%86/</id>
    <published>2019-12-16T12:15:15.000Z</published>
    <updated>2019-12-16T12:30:30.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="九余定理"><a href="#九余定理" class="headerlink" title="九余定理"></a>九余定理</h1><p>九余定理是一个和数学有关的知识，可以了解一下</p><p>首先要介绍<b style="color:red">九余数的概念</b>：一个数的各位数字之和相加后得到的&lt;10的数字称为这个数（如果相加结果大于9，则继续各位相加）</p><p>然后是<b style="color:red">九余定理的定义</b>：一个数 x，他的每个位上的数加起来为 y，九余数为（y - 1）再对 9 求余然后加1，用 C 语言表示就是 ( y - 1 ) % 9 + 1</p><p>emmm，就是说一个数，如果我要求它的九余数，怎么求呢，这样求？</p><h4 id="代码一"><a href="#代码一" class="headerlink" title="代码一"></a><b style="color:green">代码一</b></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s, t;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF) &amp;&amp; (n != <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (;;)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (;;)</span><br><span class="line">&#123;</span><br><span class="line">s = s + n % <span class="number">10</span>;</span><br><span class="line">n = n / <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s &lt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">n = s;</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是我第一次做的时候的代码，发现在处理较大的数时行不通，所以就换一种，再看看这种？</p><h4 id="代码二"><a href="#代码二" class="headerlink" title="代码二"></a><b style="color:green">代码二</b></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> x[<span class="number">10000</span>];</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;x)&amp;&amp;(x[<span class="number">0</span>] != <span class="string">'0'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; x[i]; ++i)</span><br><span class="line">            t = t + x[i] - <span class="string">'0'</span>;</span><br><span class="line">        t = t % <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">if</span>(!t)</span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="number">9</span>;</span><br><span class="line">            <span class="keyword">if</span>(x[<span class="number">0</span>] == <span class="string">'0'</span>)                             <span class="comment">//这里是特判 0 的情况</span></span><br><span class="line">                t = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就诞生了这个代码，没办法，因为处理较大的数的时候只好用字符来存储，但是还是不够简洁，下面就是九余定理</p><h4 id="代码三"><a href="#代码三" class="headerlink" title="代码三"></a><b style="color:green">代码三</b></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> n[<span class="number">100000</span>];</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>((<span class="built_in">scanf</span>(<span class="string">"%s"</span>,n)!=EOF)&amp;&amp;n[<span class="number">0</span>]!=<span class="string">'0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(n); i++)</span><br><span class="line">            s = s + n[i] - <span class="string">'0'</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (s - <span class="number">1</span>) % <span class="number">9</span> + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;九余定理&quot;&gt;&lt;a href=&quot;#九余定理&quot; class=&quot;headerlink&quot; title=&quot;九余定理&quot;&gt;&lt;/a&gt;九余定理&lt;/h1&gt;&lt;p&gt;九余定理是一个和数学有关的知识，可以了解一下&lt;/p&gt;
&lt;p&gt;首先要介绍&lt;b style=&quot;color:red&quot;&gt;九余数的概念
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My opinion</title>
    <link href="http://livefordead.github.io/2019/12/16/My-opinion/"/>
    <id>http://livefordead.github.io/2019/12/16/My-opinion/</id>
    <published>2019-12-16T06:46:40.000Z</published>
    <updated>2019-12-16T17:13:41.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对管理系统的一些看法"><a href="#对管理系统的一些看法" class="headerlink" title="对管理系统的一些看法"></a>对管理系统的一些看法</h1><p>整个这个幺蛾子呢，主要是平时学习学累了的时候就可以看看别的组的任务，还挺香的。</p><h2 id="主体方面"><a href="#主体方面" class="headerlink" title="主体方面"></a><b style="color:gold">主体方面</b></h2><p>无论是哪个管理系统，都不可能脱离注册、登录、信息修改、设置管理员是不是，还有美观界面等等其它骚操作，所以我们分成点一个一个地解决，一步一步来</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a><b style="color:red">注册</b></h3><p>注册，首先我们需要在用户<b style="color:cyan">注册成功的同时</b>创建一个<b style="color:red">专属于该用户</b>的文本文档用以储存该用户的所有信息（下面就不采用调用函数的形式了）</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>] = <span class="string">""</span>;  <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">char</span> <span class="keyword">word</span>[<span class="number">20</span>] = <span class="string">""</span>;  <span class="comment">//密码</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">FILE* fp;  <span class="comment">//这个你学文件里面应该有滴</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span> <span class="title">user</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">scanf_s(<span class="string">"%s"</span>, user.name, <span class="keyword">sizeof</span>(user.name));  <span class="comment">//安全性</span></span><br><span class="line">fp = fopen(user.name, <span class="string">"r"</span>);  <span class="comment">//以只读的方式打开这个文件，fp指向以user.name为名的文件，如果没有这个文件，则fp指向NULL</span></span><br><span class="line"><span class="keyword">if</span> (fp != <span class="literal">NULL</span>)  <span class="comment">//说明已经存在这个文件，就不可以用这个用户名注册，进行你想要的操作</span></span><br><span class="line">&#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//说明这个用户名可用，其实在前面还可以加上判断用户名长度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//然后是输入密码并确认密码的操作</span></span><br><span class="line">&#125;</span><br><span class="line">fp = fopen(user.name, <span class="string">"w"</span>);  <span class="comment">//user.name写入文件，user.name是文件名，要是没有成功，fp指向NULL</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)  <span class="comment">//显然注册失败</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//注册成功</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//任意发挥，比如输出一些话</span></span><br><span class="line"><span class="keyword">if</span> (fwrite(&amp;user, <span class="keyword">sizeof</span>(User), <span class="number">1</span>, fp) != <span class="number">1</span>)  <span class="comment">/*第一个是指向结构体的地址，第二个是写入内容的大小，</span></span><br><span class="line"><span class="comment">   第三个是数据项的个数（这里我只要写入一个结构体，所以是 1），第四个是目标文件指针</span></span><br><span class="line"><span class="comment">   返还值是实际的写入数据项的个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//要是返还值不是 1，就说明写入文件错误，可以输出一个提示，然后退出</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//到此为止，这就是注册的基本架构啦</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a><b style="color:red">登录</b></h3><p>要登陆，首先是要<b style="color:red">建立在这个用户创建了的基础上</b>，就是说我要<b style="color:blue">可以找到</b>属于这个用户的文本文档，要是找不到，就说明不存在这个用户，就可以提示并结束，然后找到了用户之后需要比较原始密码与输入密码（可以加入输错三次锁死或退出之类的）</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>] = <span class="string">""</span>;  <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">char</span> <span class="keyword">word</span>[<span class="number">20</span>] = <span class="string">""</span>;  <span class="comment">//密码</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">FILE* fp;  <span class="comment">//这个你学文件里面应该有滴</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span> <span class="title">user</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>  <span class="comment">// 好啦，接下来是在有了注册的基础上</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> _id[<span class="number">20</span>]; <span class="comment">//用以输入的用户名</span></span><br><span class="line"><span class="keyword">char</span> _pass[<span class="number">20</span>];  <span class="comment">//用以输入的密码</span></span><br><span class="line">scanf_s(<span class="string">"%s"</span>, _id, <span class="keyword">sizeof</span>(_id));</span><br><span class="line">fp = fopen(_id, <span class="string">"r+"</span>);  <span class="comment">//只读，看是不是存在这个用户名</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)  <span class="comment">//显然不存在</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//进行你想要的操作</span></span><br><span class="line">&#125;</span><br><span class="line">fread(&amp;user, <span class="keyword">sizeof</span>(User), <span class="number">1</span>, fp);  <span class="comment">//从fp所指向的文件处读取user的信息</span></span><br><span class="line">scanf_s(<span class="string">"%s"</span>, &amp;_pass, <span class="keyword">sizeof</span>(_pass));</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(user.<span class="keyword">word</span>, _pass) != <span class="number">0</span>)  <span class="comment">//比较正确密码与输入的密码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//输错了，咋办</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对啦，登陆成功啦</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(未完……前面也还需要补充)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对管理系统的一些看法&quot;&gt;&lt;a href=&quot;#对管理系统的一些看法&quot; class=&quot;headerlink&quot; title=&quot;对管理系统的一些看法&quot;&gt;&lt;/a&gt;对管理系统的一些看法&lt;/h1&gt;&lt;p&gt;整个这个幺蛾子呢，主要是平时学习学累了的时候就可以看看别的组的任务，还挺香的
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>汇编</title>
    <link href="http://livefordead.github.io/2019/12/16/%E6%B1%87%E7%BC%96/"/>
    <id>http://livefordead.github.io/2019/12/16/%E6%B1%87%E7%BC%96/</id>
    <published>2019-12-16T04:54:40.000Z</published>
    <updated>2019-12-16T07:08:47.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PWN——汇编"><a href="#PWN——汇编" class="headerlink" title="PWN——汇编"></a>PWN——汇编</h1><p>最近在了解PWN和WEB，PWN的话先是说搞汇编，就学一下，我寻思掌握了的基础知识也没有丢上来的必要，就记录一下遇到的坎和重难点之类的吧</p><h2 id="1-一些基本概念"><a href="#1-一些基本概念" class="headerlink" title="1. 一些基本概念"></a><b style="color:red">1. 一些基本概念</b></h2><p><strong>a.</strong> 汇编语言与机器语言的区别在于<em>指令的表示方式</em></p><p><strong>b.</strong> 汇编语言由 3 类指令组成：</p><ol><li>汇编指令：机器码的助记符，有对应的机器码</li><li>伪指令：没有对应的机器码，由编译器执行，计算机并不执行</li><li>其他符号：如 +、-、*、/ 等，由编译器识别，没有对应的机器码</li></ol><p>(未完……….)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PWN——汇编&quot;&gt;&lt;a href=&quot;#PWN——汇编&quot; class=&quot;headerlink&quot; title=&quot;PWN——汇编&quot;&gt;&lt;/a&gt;PWN——汇编&lt;/h1&gt;&lt;p&gt;最近在了解PWN和WEB，PWN的话先是说搞汇编，就学一下，我寻思掌握了的基础知识也没有丢上来的必要
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>HDU 2054</title>
    <link href="http://livefordead.github.io/2019/12/16/HDU-2054/"/>
    <id>http://livefordead.github.io/2019/12/16/HDU-2054/</id>
    <published>2019-12-15T20:10:29.000Z</published>
    <updated>2019-12-16T02:05:51.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HDU2054"><a href="#HDU2054" class="headerlink" title="HDU2054 !"></a><b style="color:cyan">HDU2054 !</b></h1><h2 id="A-B"><a href="#A-B" class="headerlink" title="A==B?"></a><b style="color:blue">A==B?</b></h2><h3 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h3><p><a herf="http://acm.hdu.edu.cn/showproblem.php?pid=2054">A==B?</a>这道题，好久之前做的一道挺有意思的水题，这一题从暑假开始一直A到开学后十几天，终于是做出来了，一开始太天真地以为它真的就是道下饭的题（虽然的确挺水），结果自己的操作是真的下饭，很离谱，但是后来还是莫名想通了，去搜了自己要的东西就顺利做了出来。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>虽然是比较两个数是否相等，但是并不是让你比较两个整形，这本质上其实还是道大数题，CSDN、博客园里面有蛮多人的代码都考虑太多，主要有这几种情况：</p><p><strong>·</strong> 要考虑小数点和其后的无效零</p><p><strong>·</strong> 不要考虑前导零</p><p><strong>·</strong> 不要考虑正负号</p><p>所以可以开一个字符数组，分别检索小数点存在与否（可以使用 strstr 或者 for 循环遍历查找），然后将其后的 0 全部转化为 ‘\0’ （终止符），最后将小数点转化为 ‘\0’ （终止符），最后用 strcmp比较即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100000</span>];</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">S</span><span class="params">(<span class="keyword">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l;</span><br><span class="line">    l = <span class="built_in">strlen</span>(s);  <span class="comment">//取字符数组的长度</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strstr</span>(s, <span class="string">"."</span>))  <span class="comment">//使用strstr查找是否存在小数点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = l - <span class="number">1</span>; s[i] == <span class="string">'0'</span>; i--)  <span class="comment">//从最后一位向前去除所有后置无效零</span></span><br><span class="line">        &#123;</span><br><span class="line">            s[i] = <span class="string">'\0'</span>;</span><br><span class="line">            l--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(s[l - <span class="number">1</span>] == <span class="string">'.'</span>)  <span class="comment">//去除小数点</span></span><br><span class="line">        s[l - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(scanf_s(<span class="string">"%s %s"</span>, &amp;a, &amp;b, <span class="keyword">sizeof</span>(a), <span class="keyword">sizeof</span>(b)) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        S(a);</span><br><span class="line">        S(b);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a, b) == <span class="number">0</span>)  <span class="comment">//比较</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HDU2054&quot;&gt;&lt;a href=&quot;#HDU2054&quot; class=&quot;headerlink&quot; title=&quot;HDU2054 !&quot;&gt;&lt;/a&gt;&lt;b style=&quot;color:cyan&quot;&gt;HDU2054 !&lt;/b&gt;&lt;/h1&gt;&lt;h2 id=&quot;A-B&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
    
      <category term="刷题" scheme="http://livefordead.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Some Complaing</title>
    <link href="http://livefordead.github.io/2019/12/16/Some-Complaing/"/>
    <id>http://livefordead.github.io/2019/12/16/Some-Complaing/</id>
    <published>2019-12-15T19:44:57.000Z</published>
    <updated>2019-12-15T19:59:01.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抱怨亿句"><a href="#抱怨亿句" class="headerlink" title="抱怨亿句"></a>抱怨亿句</h1><p>啊啊啊，我搞了几个小时，终于会自己上传文章了，之前要搞那个尺取法，这会儿舒服了我去</p><h2 id="我遇到了的困难"><a href="#我遇到了的困难" class="headerlink" title="我遇到了的困难"></a><b style="color:red">我遇到了的困难</b></h2><h3 id="1-Tags"><a href="#1-Tags" class="headerlink" title="1. Tags"></a>1. Tags</h3><p>首先是GIT找不到上传文件，后来把tags删掉就完事了（其实是tags的文件里面没有相对应的，所以就上传不了）</p><h3 id="2-操作符"><a href="#2-操作符" class="headerlink" title="2. 操作符"></a>2. 操作符</h3><p>其次是一些操作符不清楚，但是现在还是熟练多了（服了）</p><h3 id="3-图片"><a href="#3-图片" class="headerlink" title="3. 图片"></a>3. 图片</h3><p>再者就是图片插入，用HTML的方法img但是加载不出来，很蛋疼</p><h2 id="近期的学习"><a href="#近期的学习" class="headerlink" title="近期的学习"></a><b style="color:blue">近期的学习</b></h2><h3 id="1-考试"><a href="#1-考试" class="headerlink" title="1. 考试"></a>1. 考试</h3><p>离谱的就是快要信导考试了，历史也要考试，新知识的学习可能会放慢，优先应付考试（手动滑稽）</p><h3 id="2-作业"><a href="#2-作业" class="headerlink" title="2. 作业"></a>2. 作业</h3><p>我***，算了，我是个儒雅随和的人，这么多无关紧要的作业，真的浪费时间，但是又不得不做，唉</p><h3 id="3-在看的书和计划看的书"><a href="#3-在看的书和计划看的书" class="headerlink" title="3. 在看的书和计划看的书"></a>3. 在看的书和计划看的书</h3><p>汇编、算法（紫书）、Java（神级乱入）（emmm都了解一点应该没大问题吧）</p><p>暂时也就这些吧，会定期整理分析自己的现状滴</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;抱怨亿句&quot;&gt;&lt;a href=&quot;#抱怨亿句&quot; class=&quot;headerlink&quot; title=&quot;抱怨亿句&quot;&gt;&lt;/a&gt;抱怨亿句&lt;/h1&gt;&lt;p&gt;啊啊啊，我搞了几个小时，终于会自己上传文章了，之前要搞那个尺取法，这会儿舒服了我去&lt;/p&gt;
&lt;h2 id=&quot;我遇到了的困难&quot;
      
    
    </summary>
    
    
    
      <category term="成长记录" scheme="http://livefordead.github.io/tags/%E6%88%90%E9%95%BF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Rule Taking</title>
    <link href="http://livefordead.github.io/2019/12/16/Rule-Taking-0/"/>
    <id>http://livefordead.github.io/2019/12/16/Rule-Taking-0/</id>
    <published>2019-12-15T18:37:04.000Z</published>
    <updated>2019-12-16T12:31:01.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="尺取法-Rule-Taking"><a href="#尺取法-Rule-Taking" class="headerlink" title="尺取法 (Rule Taking)"></a>尺取法 (Rule Taking)</h1><h2 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a><b style="color:green">常见用法</b></h2><p>一个数组中寻找长度最（小 / 大）的一段满足和最大或者大于某一个定值</p><h2 style="color:green">主要思想</h2>当 a1 , a2 , a3 ...... an 满足和 >= S，得到一个区间长度 n，那么去掉开头 a1，剩下 a2 , a3 ... 判断是否满足 >= S，<b style="color:red">如果满足</b>，那么区间长度更新，<b style="color:red">如果不满足</b>，那么尾部向后延展，判断 a2 , a3 ...... a (n + 1) 是否满足条件，重复这样的操作<h2 id="理解与思考"><a href="#理解与思考" class="headerlink" title="理解与思考"></a><b style="color:green">理解与思考</b></h2><p>当一个区间<b style="color:blue">满足条件</b>时，那么去掉区间开头第一个数，得到新区间，判断新区间是否满足条件，如果不满足条件，那么区间末尾向后扩展，直到满足条件为止，这样就得到了很多满足条件的区间，再根据题意，在此之间进行选择，比如区间最长，区间最短啥的，这样跑一遍下来，时间复杂度只有 O (n)</p><h2 id="比如"><a href="#比如" class="headerlink" title="比如"></a><b style="color:purple">比如</b></h2><p>给出 T 组数据，每组数据有 n 个数，并且每次给你一个 s 值，求最小的满足相加大于 s 的连续子序列的长度</p><p>详情请前往<a herf="http://poj.org/problem?id=3061">POJ3061</a></p><p>下面贴代码（C语言）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100005</span>]; <span class="comment">//定义一个数组来储存每组的数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;s);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);  <span class="comment">//赋值</span></span><br><span class="line">    <span class="keyword">int</span> k = n + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">0</span>; <span class="comment">//清零操作</span></span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (m &lt; s &amp;&amp; v &lt; n)</span><br><span class="line">            m = m + a[++v];  <span class="comment">//从第一个数开始增加，直到和大于等于 s 或者在 v 大于等于 n 的时候还是要小，就结束循环</span></span><br><span class="line">        <span class="keyword">if</span> (m &lt; s)  <span class="comment">//判断和是否大于s,其实就是看整个数段总和是否大于s，如果不就跳出循环</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; v - u)  <span class="comment">// u 作为数段的前标，v 作为数段的后标，v - u 就是数段的长度</span></span><br><span class="line">            k = v - u; <span class="comment">//取小的</span></span><br><span class="line">        m = m - a[u++]; <span class="comment">//在确定 s 比现在的和小后，从前面开始缩短数段，再进行循环</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k == n + <span class="number">1</span>) <span class="comment">//这是所有数的和都比 s 小的情况</span></span><br><span class="line">        k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, k);  <span class="comment">//输出</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="有点想说的"><a href="#有点想说的" class="headerlink" title="有点想说的"></a><b style="color:orange">有点想说的</b></h1><p>emm第一个传上来的学习的……emm今晚去参加了元旦晚会的二审，没什么时间学习了，惭愧，然后就是报名了明年的蓝桥杯，需要准备（毕竟交了300嗷嗷嗷嗷），所以整理了一个算法专栏，回顾以前学的，更新新学习的，emm暂时也就这些了，我会坚持下去嗷。（话说博客真香哇）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;尺取法-Rule-Taking&quot;&gt;&lt;a href=&quot;#尺取法-Rule-Taking&quot; class=&quot;headerlink&quot; title=&quot;尺取法 (Rule Taking)&quot;&gt;&lt;/a&gt;尺取法 (Rule Taking)&lt;/h1&gt;&lt;h2 id=&quot;常见用法&quot;&gt;&lt;a 
      
    
    </summary>
    
    
    
      <category term="算法" scheme="http://livefordead.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello everyone</title>
    <link href="http://livefordead.github.io/2019/12/15/Hello-everyone/"/>
    <id>http://livefordead.github.io/2019/12/15/Hello-everyone/</id>
    <published>2019-12-15T07:47:48.000Z</published>
    <updated>2019-12-16T03:26:35.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h1><p>首先，要感谢<a href="https://lemonprefect.cn/" target="_blank" rel="noopener">Lemon</a>的技术支持，在创建了这个博客的时候我已经入大学三个月了，这个博客我会用来记录自己的一些学习经历，平时的刷题的一些报告（坑？），算法之类的，希望可以多向大佬们学习，最后争取超越他们。</p><h1 id="当下"><a href="#当下" class="headerlink" title="当下"></a>当下</h1><p>新生赛发挥不错，进入了网安组，承蒙老师学长厚爱，和同届大佬们的谦让，我有幸成为了19级组长，</p><p>希望与大家一同努力进步，誓必不辜负大家的信任。</p><h1 id="将来的想法"><a href="#将来的想法" class="headerlink" title="将来的想法"></a>将来的想法</h1><p>网安组是两个方向，web和pwn，说实在的我现在两个都挺感兴趣，所以还在思考，至于其它的高数英语之类的学习太尼玛蛋疼了，就尼玛离谱，还有历史什么的，很让人头大，总之，先学着就完事了。</p><p style="color:red">感谢你来到了这个小地方.</p>![程序员嘛，也还行](D:\shit\source\_posts\Hello-everyone\kPlYAP.jpg)]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于这个博客&quot;&gt;&lt;a href=&quot;#关于这个博客&quot; class=&quot;headerlink&quot; title=&quot;关于这个博客&quot;&gt;&lt;/a&gt;关于这个博客&lt;/h1&gt;&lt;p&gt;首先，要感谢&lt;a href=&quot;https://lemonprefect.cn/&quot; target=&quot;_blan
      
    
    </summary>
    
    
    
      <category term="成长记录" scheme="http://livefordead.github.io/tags/%E6%88%90%E9%95%BF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
